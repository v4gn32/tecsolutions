// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Pode trocar para MySQL se preferir
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(cuid())
  name      String
  email     String     @unique
  password  String
  role      Role       @default(USER)
  createdAt DateTime   @default(now())
  createdBy String? // ID do usu√°rio que criou (admin)
  proposals Proposal[]
}

// enum continua igual
enum ClientType {
  CONTRATO
  AVULSO
}

model Client {
  id          String     @id @default(cuid())
  contactName String     @map("contact_name")
  companyName String     @map("company")
  email       String
  phone       String
  cnpj        String?    @unique
  type        ClientType
  address     String
  createdAt   DateTime   @default(now())
  Proposal    Proposal[]
}

model Service {
  id            String          @id @default(cuid())
  name          String
  description   String
  price         Float
  category      ServiceCategory
  unit          String
  createdAt     DateTime        @default(now())
  proposalItems ProposalItem[]
}

model Product {
  id                   String                @id @default(cuid())
  name                 String
  description          String
  price                Float
  category             ProductCategory       @default(OUTROS)
  unit                 String
  brand                String?
  model                String?
  stock                Int?
  createdAt            DateTime              @default(now())
  proposalProductItems ProposalProductItem[]
}

model Proposal {
  id           String                @id @default(cuid())
  clientId     String
  client       Client                @relation(fields: [clientId], references: [id])
  userId       String?
  user         User?                 @relation(fields: [userId], references: [id])
  number       String                @unique
  title        String
  description  String?
  subtotal     Float
  discount     Float                 @default(0)
  total        Float
  status       ProposalStatus        @default(RASCUNHO)
  validUntil   DateTime
  createdAt    DateTime              @default(now())
  updatedAt    DateTime              @updatedAt
  notes        String?
  items        ProposalItem[]
  productItems ProposalProductItem[]
}

model ProposalItem {
  id         String   @id @default(cuid())
  proposalId String
  proposal   Proposal @relation(fields: [proposalId], references: [id])
  serviceId  String
  service    Service  @relation(fields: [serviceId], references: [id])
  quantity   Int
  unitPrice  Float
  total      Float
}

model ProposalProductItem {
  id         String   @id @default(cuid())
  proposalId String
  proposal   Proposal @relation(fields: [proposalId], references: [id])
  productId  String
  product    Product  @relation(fields: [productId], references: [id])
  quantity   Int
  unitPrice  Float
  total      Float
}

enum Role {
  ADMIN
  USER
}

enum ServiceCategory {
  HELPDESK
  INSTALACAO
  SISTEMA
  EMAIL
  SEGURANCA
  BACKUP
  SERVIDOR
  REDE
  IMPRESSORA
  USUARIO
  INFRA
  WEB
  TREINAMENTO
  GESTAO
}

enum ProductCategory {
  CABOS
  CONECTORES
  EQUIPAMENTOS
  ACESSORIOS
  OUTROS
}

enum ProposalStatus {
  RASCUNHO
  ENVIADA
  APROVADA
  RECUSADA
}
